error: this function has too many arguments (8/7)
  --> $DIR/functions.rs:11:1
   |
11 | / fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {
12 | | }
   | |_^
   |
   = note: `-D too-many-arguments` implied by `-D warnings`

error: this function has too many arguments (8/7)
  --> $DIR/functions.rs:19:5
   |
19 |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: this function has too many arguments (8/7)
  --> $DIR/functions.rs:28:5
   |
28 |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:37:34
   |
37 |         println!("{}", unsafe { *p });
   |                                  ^
   |
   = note: `-D not-unsafe-ptr-arg-deref` implied by `-D warnings`

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:38:35
   |
38 |         println!("{:?}", unsafe { p.as_ref() });
   |                                   ^

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:39:33
   |
39 |         unsafe { std::ptr::read(p) };
   |                                 ^

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:50:30
   |
50 |     println!("{}", unsafe { *p });
   |                              ^

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:51:31
   |
51 |     println!("{:?}", unsafe { p.as_ref() });
   |                               ^

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:52:29
   |
52 |     unsafe { std::ptr::read(p) };
   |                             ^

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:61:34
   |
61 |         println!("{}", unsafe { *p });
   |                                  ^

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:62:35
   |
62 |         println!("{:?}", unsafe { p.as_ref() });
   |                                   ^

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:63:33
   |
63 |         unsafe { std::ptr::read(p) };
   |                                 ^

error: aborting due to 12 previous errors

