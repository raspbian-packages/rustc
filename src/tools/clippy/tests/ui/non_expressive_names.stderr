error: binding's name is too similar to existing binding
  --> $DIR/non_expressive_names.rs:18:9
   |
18 |     let bpple: i32;
   |         ^^^^^
   |
   = note: `-D similar-names` implied by `-D warnings`
note: existing binding defined here
  --> $DIR/non_expressive_names.rs:16:9
   |
16 |     let apple: i32;
   |         ^^^^^
help: separate the discriminating character by an underscore like: `b_pple`
  --> $DIR/non_expressive_names.rs:18:9
   |
18 |     let bpple: i32;
   |         ^^^^^

error: binding's name is too similar to existing binding
  --> $DIR/non_expressive_names.rs:20:9
   |
20 |     let cpple: i32;
   |         ^^^^^
   |
note: existing binding defined here
  --> $DIR/non_expressive_names.rs:16:9
   |
16 |     let apple: i32;
   |         ^^^^^
help: separate the discriminating character by an underscore like: `c_pple`
  --> $DIR/non_expressive_names.rs:20:9
   |
20 |     let cpple: i32;
   |         ^^^^^

error: binding's name is too similar to existing binding
  --> $DIR/non_expressive_names.rs:45:9
   |
45 |     let bluby: i32;
   |         ^^^^^
   |
note: existing binding defined here
  --> $DIR/non_expressive_names.rs:44:9
   |
44 |     let blubx: i32;
   |         ^^^^^
help: separate the discriminating character by an underscore like: `blub_y`
  --> $DIR/non_expressive_names.rs:45:9
   |
45 |     let bluby: i32;
   |         ^^^^^

error: binding's name is too similar to existing binding
  --> $DIR/non_expressive_names.rs:50:9
   |
50 |     let coke: i32;
   |         ^^^^
   |
note: existing binding defined here
  --> $DIR/non_expressive_names.rs:48:9
   |
48 |     let cake: i32;
   |         ^^^^

error: binding's name is too similar to existing binding
  --> $DIR/non_expressive_names.rs:68:9
   |
68 |     let xyzeabc: i32;
   |         ^^^^^^^
   |
note: existing binding defined here
  --> $DIR/non_expressive_names.rs:66:9
   |
66 |     let xyz1abc: i32;
   |         ^^^^^^^

error: binding's name is too similar to existing binding
  --> $DIR/non_expressive_names.rs:72:9
   |
72 |     let parsee: i32;
   |         ^^^^^^
   |
note: existing binding defined here
  --> $DIR/non_expressive_names.rs:70:9
   |
70 |     let parser: i32;
   |         ^^^^^^
help: separate the discriminating character by an underscore like: `parse_e`
  --> $DIR/non_expressive_names.rs:72:9
   |
72 |     let parsee: i32;
   |         ^^^^^^

error: binding's name is too similar to existing binding
  --> $DIR/non_expressive_names.rs:86:16
   |
86 |         bpple: sprang } = unimplemented!();
   |                ^^^^^^
   |
note: existing binding defined here
  --> $DIR/non_expressive_names.rs:85:22
   |
85 |     let Foo { apple: spring,
   |                      ^^^^^^

error: 5th binding whose name is just one char
   --> $DIR/non_expressive_names.rs:120:17
    |
120 |             let e: i32;
    |                 ^
    |
    = note: `-D many-single-char-names` implied by `-D warnings`

error: 5th binding whose name is just one char
   --> $DIR/non_expressive_names.rs:123:17
    |
123 |             let e: i32;
    |                 ^

error: 6th binding whose name is just one char
   --> $DIR/non_expressive_names.rs:124:17
    |
124 |             let f: i32;
    |                 ^

error: 5th binding whose name is just one char
   --> $DIR/non_expressive_names.rs:129:13
    |
129 |             e => panic!(),
    |             ^

error: aborting due to 11 previous errors

