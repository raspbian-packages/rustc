error: called `map(f)` on an Result value where `f` is a unit function
  --> $DIR/result_map_unit_fn.rs:33:5
   |
33 |     x.field.map(do_nothing);
   |     ^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(x_field) = x.field { do_nothing(...) }`
   |
   = note: `-D result-map-unit-fn` implied by `-D warnings`

error: called `map(f)` on an Result value where `f` is a unit function
  --> $DIR/result_map_unit_fn.rs:35:5
   |
35 |     x.field.map(do_nothing);
   |     ^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(x_field) = x.field { do_nothing(...) }`

error: called `map(f)` on an Result value where `f` is a unit function
  --> $DIR/result_map_unit_fn.rs:37:5
   |
37 |     x.field.map(diverge);
   |     ^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(x_field) = x.field { diverge(...) }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:43:5
   |
43 |     x.field.map(|value| x.do_result_nothing(value + captured));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { x.do_result_nothing(value + captured) }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:45:5
   |
45 |     x.field.map(|value| { x.do_result_plus_one(value + captured); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { x.do_result_plus_one(value + captured); }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:48:5
   |
48 |     x.field.map(|value| do_nothing(value + captured));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:50:5
   |
50 |     x.field.map(|value| { do_nothing(value + captured) });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:52:5
   |
52 |     x.field.map(|value| { do_nothing(value + captured); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:54:5
   |
54 |     x.field.map(|value| { { do_nothing(value + captured); } });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:57:5
   |
57 |     x.field.map(|value| diverge(value + captured));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:59:5
   |
59 |     x.field.map(|value| { diverge(value + captured) });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:61:5
   |
61 |     x.field.map(|value| { diverge(value + captured); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:63:5
   |
63 |     x.field.map(|value| { { diverge(value + captured); } });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:68:5
   |
68 |     x.field.map(|value| { let y = plus_one(value + captured); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { let y = plus_one(value + captured); }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:70:5
   |
70 |     x.field.map(|value| { plus_one(value + captured); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:72:5
   |
72 |     x.field.map(|value| { { plus_one(value + captured); } });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:75:5
   |
75 |     x.field.map(|ref value| { do_nothing(value + captured) });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(ref value) = x.field { do_nothing(value + captured) }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:78:5
   |
78 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { ... }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:80:5
   |
80 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { ... }`

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:84:5
   |
84 |        x.field.map(|value| {
   |   _____^
   |  |_____|
   | ||
85 | ||         do_nothing(value);
86 | ||         do_nothing(value)
87 | ||     });
   | ||______^- help: try this: `if let Ok(value) = x.field { ... }`
   | |_______|
   | 

error: called `map(f)` on an Result value where `f` is a unit closure
  --> $DIR/result_map_unit_fn.rs:88:5
   |
88 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(value) = x.field { ... }`

error: called `map(f)` on an Result value where `f` is a unit function
  --> $DIR/result_map_unit_fn.rs:92:5
   |
92 |     "12".parse::<i32>().map(diverge);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(_) = "12".parse::<i32>() { diverge(...) }`

error: called `map(f)` on an Result value where `f` is a unit function
  --> $DIR/result_map_unit_fn.rs:98:5
   |
98 |     y.map(do_nothing);
   |     ^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try this: `if let Ok(_y) = y { do_nothing(...) }`

error: aborting due to 23 previous errors

