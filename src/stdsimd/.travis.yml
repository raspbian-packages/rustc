language: rust
sudo: false
rust: nightly

matrix:
  fast_finish: true
  include:
    - env: TARGET=i586-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-gnu NO_ADD=1
    - env: TARGET=x86_64-unknown-linux-gnu-emulated NO_ADD=1 STDSIMD_TEST_EVERYTHING=1 FEATURES="intel_sde"
    - env: TARGET=arm-unknown-linux-gnueabihf
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - os: osx
      env: TARGET=i686-apple-darwin
      script: ci/run.sh
    - os: osx
      env: TARGET=x86_64-apple-darwin NO_ADD=1
      script: ci/run.sh
    - env: DOCUMENTATION
      install: true
      script: ci/dox.sh
    - script: cargo test --manifest-path crates/stdsimd-verify/Cargo.toml
      install: true
    - env: TARGET=wasm32-unknown-unknown
      before_script:
        - git clone --recursive https://github.com/WebAssembly/wabt
        - (cd wabt && make -j4)
        - export PATH=$PATH:$PWD/wabt/bin
      script:
        - cargo build --target wasm32-unknown-unknown -p stdsimd
        - cargo build --target wasm32-unknown-unknown -p stdsimd --release
        - cargo rustc --target wasm32-unknown-unknown -p stdsimd --release --example wasm -- -C lto
        - wasm2wat target/wasm32-unknown-unknown/release/examples/wasm.wasm -o wasm.wat
        - cat wasm.wat
        - grep current_memory wasm.wat
        - grep grow_memory wasm.wat
    - env: RUSTFMT=On TARGET=x86_64-unknown-linux-gnu NO_ADD=1
      before_script:
      - rustup component add rustfmt-preview
      script:
      - cargo fmt --all -- --write-mode=diff
    - env: CLIPPY=On TARGET=x86_64-unknown-linux-gnu NO_ADD=1
      script: |
        cargo install clippy
        cargo clippy --all -- -D clippy-pedantic
  allow_failures:
    - env: CLIPPY=On TARGET=x86_64-unknown-linux-gnu NO_ADD=1

before_install:
  # FIXME (travis-ci/travis-ci#8920) shouldn't be necessary...
  - python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"

install:
  - if [ "$NO_ADD" == "" ]; then rustup target add $TARGET; fi

script:
  - cargo generate-lockfile
  - ci/run-docker.sh $TARGET $FEATURES

notifications:
  email:
    on_success: never
env:
  global:
    secure: "jmh7FfVwtPYQN/xPrVYmX7ys70GvX9YsKYtDpp8UwtIihCr81KHi2P2a1/KZNvQN0gPO+nneKieCbNQSCEtxDG9plUoB+OhX8ov9g3ImTJbyt+oW35Vlqq9ftB+Hr/Wn42o4OSTYxRfy1gf9VMePBaJfdkuym3BB75K4s+k+akuVqJv+KAm3zz0wSqU4O/evj2EGz1ldMzqxpogrO2WJQkXyl4xaW/1E0y8IZfRy0bJPKALFUpTDp39ZiWvzjNdr8CXUW1DChJdFPNo7yswxyl/NL5e/meHqF2dzS5b0YyOhcCzlBm7eZoEwyHZWB73t7n5Tuo0uYpX/kBXPAvtDrljQjBNcpm9vJtg6sj3oG0bGAI8pJfNNpLdHLHO6CjmORGP/rzZLeRdEFVb8t7UIXG7l3NcoBpRNiwPFY4gpE5dgiRsKjNrtmNe3GahhsYwbPkc+QUeQFIDtYYRxdJVZj+KvU9jIEpRh5Zv8FZBfsfx0LcLEdtRBjJxFNGGO5NY8nP0OWNVyt4ckRbRMtVzcbcOdzcfUc74/wZYZj8SrfcbSqsfylMQbxLAHJCynvuFmoMf3udPqP3aPuO+4EjDYDIQ1kHwKK87lwqlXFHdhRepAmhRR//g3bDUxzXd96KJqbFU3MYZnn/jzIi0kl+jx3FxivT380cYLVjrD29aGc7M="
